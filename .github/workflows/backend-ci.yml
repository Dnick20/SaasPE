name: Backend CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'SaasPE-Backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'SaasPE-Backend/**'

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: saaspe_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: SaasPE-Backend/package-lock.json

      - name: Install dependencies
        working-directory: ./SaasPE-Backend
        run: npm ci

      - name: Run linter
        working-directory: ./SaasPE-Backend
        run: npm run lint

      - name: Type check
        working-directory: ./SaasPE-Backend
        run: npm run build

      - name: Generate Prisma Client
        working-directory: ./SaasPE-Backend
        run: npx prisma generate

      - name: Run database migrations
        working-directory: ./SaasPE-Backend
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/saaspe_test
        run: npx prisma migrate deploy

      - name: Run unit tests
        working-directory: ./SaasPE-Backend
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/saaspe_test
          REDIS_URL: redis://localhost:6379
          JWT_SECRET: test-secret-key
        run: npm test -- --coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./SaasPE-Backend/coverage/coverage-final.json
          flags: backend

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Snyk Security Scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [lint-and-test, security-scan]
    if: github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./SaasPE-Backend
          push: true
          tags: saaspe/backend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
